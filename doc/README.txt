CTBangBang Emphysema Pipeline Documentation

Associated Software Packages:
----------------------------------------
CTBangBang:          https://github.com/captnjohnny1618/CTBangBang
CTBangBang_Pipeline: https://github.com/captnjohnny1618/CTBB_Pipeline
QIA:                 MedQIA image processing toolchain; not publicly available
FreeCT:              https://github.com/FreeCT

Overview:
----------------------------------------
This set of tools is intended for Condor-cluster-based batch processing of CT image data reconstructed using the CTBangBang Pipeline.  Most tools are task-independent (i.e. not specific to emphysema scoring) and can be applied to a variety of desired imaging tasks.

All individual processing modules are designed in the same manner and have three components:

(1) Script to perform task on one reconstruction condition.  This will be called the "task script."
(2) Script to automate job generation and condor submission.  This will be called the "pipeline script."
(3) Configuration file handling and job customization for the pipeline script.

The modules included in this package as of 2/28/2017 are:

(i)   File conversion (.img->.hr2)
(ii)  Lung segmentation
(iii) Histogramming of the lungs
(iv)  Emphysema scoring of lungs

Each module is designed to operate on a CTBangBang Pipeline "Library." This is a specific directory structure.  For the purposes of this document, we will assume this corresponds to an environment variable CTBB_PLIB (i.e. we can reference it using $(CTBB_PLIB))

Configuration files:
----------------------------------------
All "pipeline scripts" (script type (2) above) accept a configuration file as their only input.  This configuration file is written in YAML and contains any information needed to perform and/or customize the desired task.

For all modules, their is a default behavior and the only required element of the configuration file is:

library: /path/to/library/directory/

If a user wished, simply running the modules in the order (i)-(iv) would complete a study using the same configuration file specifying only the library.

Some modules accept other information in the configuration file to customize the task. For instance, the segmentation module can intelligently apply segmentations performed on smooth reconstructions to the sharp/noisy reconstructions via a "parent_seg:" YAML block.  See the sample configuration files contained in the doc/samples/ directory of this project to see module-specific customization options.  

Modules (details):
----------------------------------------

(i) File conversion:

* Sample configuration file:  samples/convert_config.yml
* Task script:                ../src/convert_img_file.py
* Pipeline script:            ../src/ctbb_pipeline_convert.py

Summary:
This module handles converting the .prm & .img files generated by the CTBangBang software into the QIA-specific .hr2 filetype for use with analysis tools.  Eventually we hope to support conversion between arbitrary filetypes (i.e. .img -> DICOM, .img -> Nifti, DICOM -> hr2, etc.).

Sample command line calls:
    python convert_img_file.py /path/to/image_file.img /path/to/parameter_file.prm
    python ctbb_pipeline_convert.py /path/to/conversion_configuration.yml

Outputs:
    Creates a .hr2 file of the same name as input img file in
    $(CTBB_PLIB)/recon/$(path to study)/img/img_filename.hr2

(ii) Lung segmentation

* Sample configuration file: samples/segment_config.yml
* Task script: ../src/segment_hr2_file.py
* Pipeline script: ../src/ctbb_pipeline_segment.py

Summary: This module segments a patient's lungs from hr2 files using various tools in the QIA/ipp image processing packages.  It also has the capacity to specify a "parent" segmentation which can then be applied to other scans once found (i.e. for a given patient, use only the 100% dose, smooth kernel reconstructions).  

Sample command line calls:
    python segment_hr2_file.py /path/to/image_file.hr2 /path/to/segmentation/directory/
    python ctbb_pipeline_segment.py /path/to/segmentation_configuration.yml

Outputs:
    Creates a series of segmentation files in the directory:
    $(CTBB_PLIB)/recon/$(path to study)/seg/

    While all files generated by the segmentation tool are save, of the only ones we care about are
          right_lung.roi
          left_lung.roi

DEVELOPERS NOTE:
This package has module has strong dependencies on both the QIA package, IPP package and potentially out-of-date version of the lung model used by MedQIA segmentation software.  This should be updated to target all of the more modern version as well as remove all of the hard coding at the beginning of the task-script.

Additionally, at present all segmentations files are kept however future updates will only preserve the files right_lung.roi, left_lung.roi

(iii) Histogramming of lungs 

* Sample configuration file: samples/histogram_config.yml
* Task script: ../src/calculate_histogram.py
* Pipeline script: ../src/ctbb_pipeline_histogram.py

Summary: This module reads a lung segmentation (see (ii)) and combines it with hr2 imaging data (see (i)) to produce a histogram of the voxels in lungs.  The output histogram is stored as a YAML in the "qi_raw" directory of a given patient/scan/reconstruction configuration.

Sample command line calls:
    python calculate_histogram.py /path/to/image_file.hr2 /path/to/segmentation/directory/
    python ctbb_pipeline_histogram.py /path/to/histogram_configuration.yml

Outputs:
    Creates a YAML file specifying the histogram at:
    $(CTBB_PLIB)/recon/$(path to study)/qi_raw/histogram_lung.yml
    
    This file can be read into a python dictionary using:
    
    with open('histogram_lung.yml','r') as f:
         histogram_dict=yaml.load(f)

(iv) Emphysema Scoring

* Sample configuration file: samples/emphysema_score_config.yml
* Task script: ../src/score_emphysema.py
* Pipeline script: ../src/ctbb_pipeline_emphysema.py

Summary: This module reads the histogram data, image data, and segmentation data and produces various emphysema scored metrics. These include:

        * RA-900, RA-910, RA-920, RA-930, RA-940, RA-950, RA-960, RA-970, RA-980
        * PERC10, PERC15, PERC20
        * Median, Mean, Volume

Results are stored as a YAML file titled "results_emphysema.yml" in the "qi_raw" directory of a given patient/scan/reconstruction configuration.
        
Sample command line calls:
    python score_emphysema.py /path/to/image_file.hr2 /path/to/segmentation/directory/
    python ctbb_pipeline_emphysema.py /path/to/emphysema_configuration.yml

Outputs:
    Creates a YAML file containing the emphysema scoring metric values in:
    $(CTBB_PLIB)/recon/$(path to study)/qi_raw/results_emphysema.yml
    
    This file can be read into a python dictionary using:
    
    with open('results_emphysema.yml','r') as f:
         emphysema_dict=yaml.load(f)
